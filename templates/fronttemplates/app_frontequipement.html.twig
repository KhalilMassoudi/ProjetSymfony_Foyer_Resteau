{% extends 'basefront.html.twig' %}

{% block amodifier %}
    <div class="container mt-5">
        <div class="d-flex justify-content-end mb-4">
            <form class="d-flex" method="get" action="{{ path('app_front_equipement') }}">
                <input class="form-control me-2" type="search" name="searchTerm" value="{{ searchTerms.searchTerm }}" placeholder="Rechercher par nom, état ou numéro de chambre..." aria-label="Search">
                <button class="btn btn-primary" type="submit">Rechercher</button>
            </form>
        </div>
        <h2 class="section-title text-center mb-4">Liste des Équipements</h2>

        {% if equipements is not empty %}
            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
                {% for equipement in equipements %}
                    <div class="col">
                        <div class="card h-100 border-0 shadow-lg rounded">
                            <!-- Image de l'équipement -->
                            <div class="image-holder">
                                <a href="{{ path('app_front_equipement', {'id': equipement.idEquipementB}) }}">
                                    <img src="{{ equipement.image ? asset('uploads/equipements/' ~ equipement.image) : asset('images/default-equipment.jpg') }}"
                                         alt="Image de l'équipement" class="card-img-top rounded-top">
                                </a>
                            </div>

                            <!-- Contenu de la carte -->
                            <div class="card-body d-flex flex-column justify-content-between">
                                <h5 class="card-title text-center">{{ equipement.nomEquipementB }}</h5>

                                <!-- Rating interactif -->
                                <p class="text-center">
                                    <strong>Note :</strong>
                                <div class="rating" data-id-equipement="{{ equipement.idEquipementB }}" data-initial-rating="{{ equipement.rating|default(0) }}">
                                    {% for i in 1..5 %}
                                        <svg xmlns="http://www.w3.org/2000/svg"
                                             width="30" height="30"
                                             fill="lightgray"
                                             class="bi bi-star-fill star"
                                             data-rating="{{ i }}"
                                             viewBox="0 0 16 16">
                                            <path d="M3.612 15.443c-.73.453-1.623-.293-1.362-1.08l1.73-5.094L.173 6.765c-.653-.63-.314-1.707.574-1.844l5.286-.652 2.004-5.255c.326-.95 1.623-.95 1.949 0l2.004 5.255 5.286.652c.888.137 1.227 1.214.574 1.844l-3.807 2.504 1.73 5.094c.26.787-.632 1.533-1.362 1.08L8 13.187l-4.389 2.256z"/>
                                        </svg>
                                    {% endfor %}
                                </div>
                                </p>

                                <p class="text-center"><strong>État :</strong>
                                    <span class="badge bg-secondary">{{ equipement.etatEquipementB }}</span>
                                </p>

                                <div class="d-flex justify-content-center mt-2">
                                    <p class="text-center"><strong>Chambre :</strong>
                                        {% if equipement.chambre %}
                                            {{ equipement.chambre.numeroChB }}
                                        {% else %}
                                            Non assignée
                                        {% endif %}
                                    </p>
                                </div>

                                <!-- Bouton Voir les détails -->
                                <div class="text-center mt-3">
                                    <a href="{{ path('app_front_equipement', {'id': equipement.idEquipementB}) }}" class="btn btn-primary">
                                        Voir les détails
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        {% else %}
            <div class="text-center">
                <p class="text-muted">Aucun équipement n'est disponible pour le moment.</p>
            </div>
        {% endif %}
    </div>

    <!-- Intégration du script pour le rating interactif -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Parcourez chaque bloc de notation
            document.querySelectorAll('.rating').forEach(function (rating) {
                const stars = rating.querySelectorAll('.star');
                const equipementId = rating.getAttribute('data-id-equipement');
                let initialRating = parseInt(rating.getAttribute('data-initial-rating'));

                // Fonction pour mettre à jour les étoiles visuellement
                function updateStars(hoverRating = 0) {
                    stars.forEach(star => {
                        const starRating = parseInt(star.getAttribute('data-rating'));
                        if (hoverRating > 0) {
                            star.setAttribute('fill', starRating <= hoverRating ? 'gold' : 'lightgray');
                        } else {
                            star.setAttribute('fill', starRating <= initialRating ? 'gold' : 'lightgray');
                        }
                    });
                }

                // Appliquez la note initiale
                updateStars();

                // Survol des étoiles
                stars.forEach(star => {
                    star.addEventListener('mouseenter', function () {
                        const hoverRating = parseInt(this.getAttribute('data-rating'));
                        updateStars(hoverRating);
                    });

                    star.addEventListener('mouseleave', function () {
                        updateStars();
                    });

                    star.addEventListener('click', function () {
                        const clickedRating = parseInt(this.getAttribute('data-rating'));

                        console.log(`ID équipement : ${equipementId}, Note donnée : ${clickedRating}`); // TRACE POUR DÉBOGAGE

                        fetch(`/rate-equipement/${equipementId}`, {
                            method: 'POST',
                            body: JSON.stringify({ rating: clickedRating }),
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Requested-With': 'XMLHttpRequest'
                            }
                        }).then(response => {
                            console.log(response); // TRACE POUR VOIR LA RÉPONSE DU SERVEUR

                            if (response.ok) {
                                initialRating = clickedRating; // Mettre à jour la valeur initiale
                                alert('Note enregistrée avec succès !');
                            } else {
                                alert("Une erreur s'est produite. Veuillez réessayer.");
                            }
                        }).catch(error => {
                            console.error('Erreur :', error); // TRACE EN CAS D'ÉCHEC
                            alert("Une erreur s'est produite. Veuillez réessayer.");
                        });
                    });
                });
            });
        });
    </script>
{% endblock %}